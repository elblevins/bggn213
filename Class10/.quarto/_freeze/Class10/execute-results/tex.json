{
  "hash": "7ddebe7a9378b48bda11bd35d6c55354",
  "result": {
    "markdown": "---\ntitle: \"Class10\"\nformat: pdf\nauthor: \"Liz\"\n---\n\n\n# Background \n\nIn this mini project we will examine 538 Halloween Candy data. \n\nWhat is your favorite candy? What is nougat anyways? And how do you say it in America?\n\nI like Jolly-ranchers. I don't know what nougat is. Never heard of it. In america it means nut bread. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncandy <- read.csv(\"candy-data.csv\", row.names = 1)\nhead(candy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             chocolate fruity caramel peanutyalmondy nougat crispedricewafer\n100 Grand            1      0       1              0      0                1\n3 Musketeers         1      0       0              0      1                0\nOne dime             0      0       0              0      0                0\nOne quarter          0      0       0              0      0                0\nAir Heads            0      1       0              0      0                0\nAlmond Joy           1      0       0              1      0                0\n             hard bar pluribus sugarpercent pricepercent winpercent\n100 Grand       0   1        0        0.732        0.860   66.97173\n3 Musketeers    0   1        0        0.604        0.511   67.60294\nOne dime        0   0        0        0.011        0.116   32.26109\nOne quarter     0   0        0        0.011        0.511   46.11650\nAir Heads       0   0        0        0.906        0.511   52.34146\nAlmond Joy      0   1        0        0.465        0.767   50.34755\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(candy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 85\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(candy$fruity==\"1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 38\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncandy[\"Twix\", ]$winpercent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 81.64291\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrownames(candy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"100 Grand\"                   \"3 Musketeers\"               \n [3] \"One dime\"                    \"One quarter\"                \n [5] \"Air Heads\"                   \"Almond Joy\"                 \n [7] \"Baby Ruth\"                   \"Boston Baked Beans\"         \n [9] \"Candy Corn\"                  \"Caramel Apple Pops\"         \n[11] \"Charleston Chew\"             \"Chewey Lemonhead Fruit Mix\" \n[13] \"Chiclets\"                    \"Dots\"                       \n[15] \"Dum Dums\"                    \"Fruit Chews\"                \n[17] \"Fun Dip\"                     \"Gobstopper\"                 \n[19] \"Haribo Gold Bears\"           \"Haribo Happy Cola\"          \n[21] \"Haribo Sour Bears\"           \"Haribo Twin Snakes\"         \n[23] \"HersheyÕs Kisses\"            \"HersheyÕs Krackel\"          \n[25] \"HersheyÕs Milk Chocolate\"    \"HersheyÕs Special Dark\"     \n[27] \"Jawbusters\"                  \"Junior Mints\"               \n[29] \"Kit Kat\"                     \"Laffy Taffy\"                \n[31] \"Lemonhead\"                   \"Lifesavers big ring gummies\"\n[33] \"Peanut butter M&MÕs\"         \"M&MÕs\"                      \n[35] \"Mike & Ike\"                  \"Milk Duds\"                  \n[37] \"Milky Way\"                   \"Milky Way Midnight\"         \n[39] \"Milky Way Simply Caramel\"    \"Mounds\"                     \n[41] \"Mr Good Bar\"                 \"Nerds\"                      \n[43] \"Nestle Butterfinger\"         \"Nestle Crunch\"              \n[45] \"Nik L Nip\"                   \"Now & Later\"                \n[47] \"Payday\"                      \"Peanut M&Ms\"                \n[49] \"Pixie Sticks\"                \"Pop Rocks\"                  \n[51] \"Red vines\"                   \"ReeseÕs Miniatures\"         \n[53] \"ReeseÕs Peanut Butter cup\"   \"ReeseÕs pieces\"             \n[55] \"ReeseÕs stuffed with pieces\" \"Ring pop\"                   \n[57] \"Rolo\"                        \"Root Beer Barrels\"          \n[59] \"Runts\"                       \"Sixlets\"                    \n[61] \"Skittles original\"           \"Skittles wildberry\"         \n[63] \"Nestle Smarties\"             \"Smarties candy\"             \n[65] \"Snickers\"                    \"Snickers Crisper\"           \n[67] \"Sour Patch Kids\"             \"Sour Patch Tricksters\"      \n[69] \"Starburst\"                   \"Strawberry bon bons\"        \n[71] \"Sugar Babies\"                \"Sugar Daddy\"                \n[73] \"Super Bubble\"                \"Swedish Fish\"               \n[75] \"Tootsie Pop\"                 \"Tootsie Roll Juniors\"       \n[77] \"Tootsie Roll Midgies\"        \"Tootsie Roll Snack Bars\"    \n[79] \"Trolli Sour Bites\"           \"Twix\"                       \n[81] \"Twizzlers\"                   \"Warheads\"                   \n[83] \"WelchÕs Fruit Snacks\"        \"WertherÕs Original Caramel\" \n[85] \"Whoppers\"                   \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncandy[\"Air Heads\", ]$winpercent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 52.34146\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncandy[\"Kit Kat\", ]$winpercent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 76.7686\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncandy[\"Tootsie Roll Snack Bars\", ]$winpercent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 49.6535\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncandy[\"Sugar Daddy\", ]$winpercent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32.231\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"skimr\")\nskim(candy)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |      |\n|:------------------------|:-----|\n|Name                     |candy |\n|Number of rows           |85    |\n|Number of columns        |12    |\n|_______________________  |      |\n|Column type frequency:   |      |\n|numeric                  |12    |\n|________________________ |      |\n|Group variables          |None  |\n\n\n**Variable type: numeric**\n\n|skim_variable    | n_missing| complete_rate|  mean|    sd|    p0|   p25|   p50|   p75|  p100|hist  |\n|:----------------|---------:|-------------:|-----:|-----:|-----:|-----:|-----:|-----:|-----:|:-----|\n|chocolate        |         0|             1|  0.44|  0.50|  0.00|  0.00|  0.00|  1.00|  1.00|▇▁▁▁▆ |\n|fruity           |         0|             1|  0.45|  0.50|  0.00|  0.00|  0.00|  1.00|  1.00|▇▁▁▁▆ |\n|caramel          |         0|             1|  0.16|  0.37|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|peanutyalmondy   |         0|             1|  0.16|  0.37|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|nougat           |         0|             1|  0.08|  0.28|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▁ |\n|crispedricewafer |         0|             1|  0.08|  0.28|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▁ |\n|hard             |         0|             1|  0.18|  0.38|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|bar              |         0|             1|  0.25|  0.43|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|pluribus         |         0|             1|  0.52|  0.50|  0.00|  0.00|  1.00|  1.00|  1.00|▇▁▁▁▇ |\n|sugarpercent     |         0|             1|  0.48|  0.28|  0.01|  0.22|  0.47|  0.73|  0.99|▇▇▇▇▆ |\n|pricepercent     |         0|             1|  0.47|  0.29|  0.01|  0.26|  0.47|  0.65|  0.98|▇▇▇▇▆ |\n|winpercent       |         0|             1| 50.32| 14.71| 22.45| 39.14| 47.83| 59.86| 84.18|▃▇▆▅▂ |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(candy)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |      |\n|:------------------------|:-----|\n|Name                     |candy |\n|Number of rows           |85    |\n|Number of columns        |12    |\n|_______________________  |      |\n|Column type frequency:   |      |\n|numeric                  |12    |\n|________________________ |      |\n|Group variables          |None  |\n\n\n**Variable type: numeric**\n\n|skim_variable    | n_missing| complete_rate|  mean|    sd|    p0|   p25|   p50|   p75|  p100|hist  |\n|:----------------|---------:|-------------:|-----:|-----:|-----:|-----:|-----:|-----:|-----:|:-----|\n|chocolate        |         0|             1|  0.44|  0.50|  0.00|  0.00|  0.00|  1.00|  1.00|▇▁▁▁▆ |\n|fruity           |         0|             1|  0.45|  0.50|  0.00|  0.00|  0.00|  1.00|  1.00|▇▁▁▁▆ |\n|caramel          |         0|             1|  0.16|  0.37|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|peanutyalmondy   |         0|             1|  0.16|  0.37|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|nougat           |         0|             1|  0.08|  0.28|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▁ |\n|crispedricewafer |         0|             1|  0.08|  0.28|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▁ |\n|hard             |         0|             1|  0.18|  0.38|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|bar              |         0|             1|  0.25|  0.43|  0.00|  0.00|  0.00|  0.00|  1.00|▇▁▁▁▂ |\n|pluribus         |         0|             1|  0.52|  0.50|  0.00|  0.00|  1.00|  1.00|  1.00|▇▁▁▁▇ |\n|sugarpercent     |         0|             1|  0.48|  0.28|  0.01|  0.22|  0.47|  0.73|  0.99|▇▇▇▇▆ |\n|pricepercent     |         0|             1|  0.47|  0.29|  0.01|  0.26|  0.47|  0.65|  0.98|▇▇▇▇▆ |\n|winpercent       |         0|             1| 50.32| 14.71| 22.45| 39.14| 47.83| 59.86| 84.18|▃▇▆▅▂ |\n:::\n:::\n\n\n>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?\n\nYes the win percent\n\n>Q8. Plot a histogram of winpercent values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(candy$winpercent)\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-12-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(candy$winpercent, breaks = 7)\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(candy)+\n  aes(winpercent)+\n  geom_histogram(bins=10, col=\"red\", fill=\"yellow\")\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchocolate.inds <- as.logical(candy$chocolate)\nchocolate.win <- candy[chocolate.inds, ]$winpercent\nmean(chocolate.win)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 60.92153\n```\n:::\n:::\n\n\nAnd for fruit candy...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfruit.inds <- as.logical(candy$fruit)\nfruit.win <- candy[fruit.inds, ]$winpercent\nmean(fruit.win)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 44.11974\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(chocolate.win, fruit.win)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  chocolate.win and fruit.win\nt = 6.2582, df = 68.882, p-value = 2.871e-08\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 11.44563 22.15795\nsample estimates:\nmean of x mean of y \n 60.92153  44.11974 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(5, 1, 2, 6)\nsort(x, decreasing = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6 5 2 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx[ order(x) ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 5 6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- c(\"barry\", \"alice\", \"chandra\")\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"barry\"   \"alice\"   \"chandra\"\n```\n:::\n\n```{.r .cell-code}\nsort(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"alice\"   \"barry\"   \"chandra\"\n```\n:::\n\n```{.r .cell-code}\norder(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 1 3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norder(candy$winpercent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 45  8 13 73 27 58 72  3 71 20 10 70 60 56 12 51 49 63  9 11 82 31 17 46 15\n[26] 50 30 84 22 14 59 76 16 83 81 77 64  4 47 35 18 79 40 75 85 78  6 21  5 68\n[51] 32 41 74 36 62 42 23 25  7 19 28 26 66 67 38 24 61 39 57 44 34  1 69  2 48\n[76] 43 33 55 37 54 65 29 80 52 53\n```\n:::\n:::\n\n\nFirst we want to order/arrange the whole database winpercent values \n\n\n::: {.cell}\n\n```{.r .cell-code}\ninds <- order(candy$winpercent)\nhead(candy[inds, ], n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   chocolate fruity caramel peanutyalmondy nougat\nNik L Nip                  0      1       0              0      0\nBoston Baked Beans         0      0       0              1      0\nChiclets                   0      1       0              0      0\nSuper Bubble               0      1       0              0      0\nJawbusters                 0      1       0              0      0\n                   crispedricewafer hard bar pluribus sugarpercent pricepercent\nNik L Nip                         0    0   0        1        0.197        0.976\nBoston Baked Beans                0    0   0        1        0.313        0.511\nChiclets                          0    0   0        1        0.046        0.325\nSuper Bubble                      0    0   0        0        0.162        0.116\nJawbusters                        0    1   0        1        0.093        0.511\n                   winpercent\nNik L Nip            22.44534\nBoston Baked Beans   23.41782\nChiclets             24.52499\nSuper Bubble         27.30386\nJawbusters           28.12744\n```\n:::\n:::\n\n\n\n#barplot \n\nThe default barplot, made with `geom_col()`\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(candy) + \n  aes(winpercent, reorder(rownames(candy), winpercent)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-23-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"mybarplot.png\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 5.5 x 3.5 in image\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_cols <- rep(\"black\", nrow(candy))\nmy_cols[as.logical(candy$chocolate)] <- \"chocolate\"\nmy_cols[as.logical(candy$bar)] <- \"brown\"\nmy_cols[as.logical(candy$fruity)] <- \"red\"\nmy_cols\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"brown\"     \"brown\"     \"black\"     \"black\"     \"red\"       \"brown\"    \n [7] \"brown\"     \"black\"     \"black\"     \"red\"       \"brown\"     \"red\"      \n[13] \"red\"       \"red\"       \"red\"       \"red\"       \"red\"       \"red\"      \n[19] \"red\"       \"black\"     \"red\"       \"red\"       \"chocolate\" \"brown\"    \n[25] \"brown\"     \"brown\"     \"red\"       \"chocolate\" \"brown\"     \"red\"      \n[31] \"red\"       \"red\"       \"chocolate\" \"chocolate\" \"red\"       \"chocolate\"\n[37] \"brown\"     \"brown\"     \"brown\"     \"brown\"     \"brown\"     \"red\"      \n[43] \"brown\"     \"brown\"     \"red\"       \"red\"       \"brown\"     \"chocolate\"\n[49] \"black\"     \"red\"       \"red\"       \"chocolate\" \"chocolate\" \"chocolate\"\n[55] \"chocolate\" \"red\"       \"chocolate\" \"black\"     \"red\"       \"chocolate\"\n[61] \"red\"       \"red\"       \"chocolate\" \"red\"       \"brown\"     \"brown\"    \n[67] \"red\"       \"red\"       \"red\"       \"red\"       \"black\"     \"black\"    \n[73] \"red\"       \"red\"       \"red\"       \"chocolate\" \"chocolate\" \"brown\"    \n[79] \"red\"       \"brown\"     \"red\"       \"red\"       \"red\"       \"black\"    \n[85] \"chocolate\"\n```\n:::\n:::\n\n\n\nNow I can use this vector to color up my bars\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(candy) + \n  aes(winpercent, reorder(rownames(candy), winpercent)) +\n  geom_col(fill = my_cols)\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-26-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#4. Taking a look at pricepercentage\n\nWhat about value for money?\nWhat is the best candy for the least money?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(candy) +\n  aes(winpercent, pricepercent, label=rownames(candy)) +\n  geom_point(col=my_cols) +\n  geom_text(col=my_cols)\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-27-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\nggplot(candy) +\n  aes(winpercent, pricepercent, label=rownames(candy)) +\n  geom_point(col=my_cols) +\n  geom_text_repel(col=my_cols, size=3.3, max.overlaps=5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: ggrepel: 65 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n:::\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-28-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ncorrplot 0.92 loaded\n```\n:::\n\n```{.r .cell-code}\ncij <- cor(candy)\ncorrplot(cij)\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-29-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n#PCA: Principal Component Analysis \n\nThe main function that always there for us `pcomp`. It has an important argument that is set to `scale=FALSE`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca <- prcomp(candy, scale=TRUE)\nsummary(pca)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nImportance of components:\n                          PC1    PC2    PC3     PC4    PC5     PC6     PC7\nStandard deviation     2.0788 1.1378 1.1092 1.07533 0.9518 0.81923 0.81530\nProportion of Variance 0.3601 0.1079 0.1025 0.09636 0.0755 0.05593 0.05539\nCumulative Proportion  0.3601 0.4680 0.5705 0.66688 0.7424 0.79830 0.85369\n                           PC8     PC9    PC10    PC11    PC12\nStandard deviation     0.74530 0.67824 0.62349 0.43974 0.39760\nProportion of Variance 0.04629 0.03833 0.03239 0.01611 0.01317\nCumulative Proportion  0.89998 0.93832 0.97071 0.98683 1.00000\n```\n:::\n:::\n\nMy PCA plot (a.k.a) PC1 vs PC2 score plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pca$x[ , 1], pca$x[, 2], col=my_cols, pch=16)\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-31-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- cbind(candy, pca$x[, 1:3])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(my_data) +\n    aes(x=PC1, y=PC2, \n            size=winpercent/100,  \n            text=rownames(my_data),\n            label=rownames(my_data)) +\n        geom_point(col=my_cols)\n\np\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-33-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(my_data) +\n    aes(x=PC1, y=PC2, label=row.names(my_data)) +\n  geom_point(col= my_cols) +\ngeom_text_repel(col=my_cols, max.overlaps =7)\n\np\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: ggrepel: 63 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n:::\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-34-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mar=c(8,4,2,2))\nbarplot(pca$rotation[,1], las=2, ylab=\"PC1 Contribution\")\n```\n\n::: {.cell-output-display}\n![](Class10_files/figure-pdf/unnamed-chunk-35-1.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "Class10_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}